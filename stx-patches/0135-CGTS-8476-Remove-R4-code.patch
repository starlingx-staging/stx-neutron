From 845453f378e7446b1a50148fdda2d7d6116a82a5 Mon Sep 17 00:00:00 2001
From: Joseph Richard <Joseph.Richard@windriver.com>
Date: Fri, 16 Feb 2018 16:23:25 -0500
Subject: [PATCH 135/155] CGTS-8476: Remove R4 code.

---
 neutron/plugins/wrs/agent/avr/agent.py | 31 -------------------------------
 1 file changed, 31 deletions(-)

diff --git a/neutron/plugins/wrs/agent/avr/agent.py b/neutron/plugins/wrs/agent/avr/agent.py
index af12c2c..b2386fa 100644
--- a/neutron/plugins/wrs/agent/avr/agent.py
+++ b/neutron/plugins/wrs/agent/avr/agent.py
@@ -333,37 +333,6 @@ class AVRAgentManager(manager.Manager):
             return True
         return False
 
-    def _sanitize_duplicate_interfaces_r4(self, router):
-        """
-        Before a compute node is upgraded, AVR should ignore all duplicated
-        subnets that have been created to migrate away from using vlan-tagged
-        subnets.
-        """
-        _interfaces = router.get(constants.INTERFACE_KEY, [])
-        _snat_router_interfaces = router.get(n_const.SNAT_ROUTER_INTF_KEY, [])
-        all_interfaces = list(_interfaces) + list(_snat_router_interfaces)
-        subnets_with_vlans = []
-        for _interface in all_interfaces:
-            subnets = _interface.get('subnets', [])
-            for subnet in subnets:
-                if subnet.get('wrs-net:vlan_id', 0) > 0:
-                    subnets_with_vlans.append(subnet.get('cidr'))
-        # Make copy of list to iterate through, so can be removed from original
-        for _interface in all_interfaces:
-            subnets = _interface.get('subnets', [])
-            for subnet in subnets:
-                if subnet.get('wrs-net:vlan_id', 0) == 0:
-                    if subnet.get('cidr') in subnets_with_vlans:
-                        if _interface in _interfaces:
-                            _interfaces.remove(_interface)
-                        elif _interface in _snat_router_interfaces:
-                            _snat_router_interfaces.remove(_interface)
-                        else:
-                            continue
-                        LOG.info("AVR ignoring r5 {} interface: {}"
-                                 .format(_interface.get('device_owner'),
-                                         _interface.get('id')))
-
     def _sanitize_duplicate_interfaces_r5(self, router):
         """
         After a compute node is upgraded, AVR should ignore all vlan-tagged
-- 
2.7.4

