From cfa21bea8086ad276169caa7ddd3ad276b7cfe70 Mon Sep 17 00:00:00 2001
From: Joseph Richard <Joseph.Richard@windriver.com>
Date: Tue, 10 Oct 2017 15:24:02 -0400
Subject: [PATCH 059/155] US102722: Ignore migration data within AVR

Before a compute node is upgraded, AVR should ignore all duplicated subnets
that have been created to migrate away from using vlan-tagged subnets.

After a compute node is upgraded, AVR should ignore all vlan-tagged subnets,
as they have been replaced by newly-created subnets in order to migrate away
from using vlan-tagged subnets.
---
 neutron/plugins/wrs/agent/avr/agent.py | 41 ++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)

diff --git a/neutron/plugins/wrs/agent/avr/agent.py b/neutron/plugins/wrs/agent/avr/agent.py
index 8f8ddf1..8e29c61 100644
--- a/neutron/plugins/wrs/agent/avr/agent.py
+++ b/neutron/plugins/wrs/agent/avr/agent.py
@@ -332,6 +332,47 @@ class AVRAgentManager(manager.Manager):
             return True
         return False
 
+    def _sanitize_duplicate_interfaces_r4(self, router):
+        """
+        Before a compute node is upgraded, AVR should ignore all duplicated
+        subnets that have been created to migrate away from using vlan-tagged
+        subnets.
+        """
+        _interfaces = router.get('_interfaces', [])
+        subnets_with_vlans = []
+        for _interface in _interfaces:
+            subnets = _interface.get('subnets', [])
+            for subnet in subnets:
+                if subnet.get('wrs-net:vlan_id', 0) > 0:
+                    subnets_with_vlans.append(subnet.get('cidr'))
+        # Make copy of list to iterate through, so can be removed from original
+        for _interface in list(_interfaces):
+            subnets = _interface.get('subnets', [])
+            for subnet in subnets:
+                if subnet.get('wrs-net:vlan_id', 0) == 0:
+                    if subnet.get('cidr') in subnets_with_vlans:
+                        if _interface in _interfaces:
+                            _interfaces.remove(_interface)
+                            LOG.info("AVR ignoring r5 interface: {}"
+                                     .format(_interface))
+
+    def _sanitize_duplicate_interfaces_r5(self, router):
+        """
+        After a compute node is upgraded, AVR should ignore all vlan-tagged
+        subnets, as they have been replaced by newly-created subnets in order
+        to migrate away from using vlan-tagged subnets.
+        """
+        _interfaces = router.get('_interfaces', [])
+        # Make copy of list to iterate through, so can be removed from original
+        for _interface in list(_interfaces):
+            subnets = _interface.get('subnets', [])
+            for subnet in subnets:
+                if subnet.get('wrs-net:vlan_id', 0) > 0:
+                    if _interface in _interfaces:
+                        _interfaces.remove(_interface)
+                        LOG.info("AVR ignoring r4 interface: {}"
+                                 .format(_interface))
+
     def _sanitize_router(self, router):
         if not router.get('distributed', False):
             return router
-- 
2.7.4

