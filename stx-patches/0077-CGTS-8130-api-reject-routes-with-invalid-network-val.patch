From 6ed8fe64aac488103d2024ccb3351f5fa34016f8 Mon Sep 17 00:00:00 2001
From: Allain Legacy <allain.legacy@windriver.com>
Date: Wed, 1 Nov 2017 07:45:46 -0500
Subject: [PATCH 077/155] CGTS-8130: api: reject routes with invalid network
 values

The type:hostroutes validator is not properly validating subnets that have
non-zero values in the host portion of the network address (e.g., 1.2.3.1/24
rather than 1.2.3.0/24). This can cause issues for backends/drivers that assume
that the data coming down from the server is valid.

Conflicts:
	neutron/api/v2/attributes.py
---
 neutron/api/v2/attributes.py                     | 38 +++++++++++++++++++++++-
 neutron/extensions/extraroute.py                 |  2 +-
 neutron/tests/unit/db/test_db_base_plugin_v2.py  |  4 ++-
 neutron/tests/unit/extensions/test_extraroute.py |  8 +++++
 4 files changed, 49 insertions(+), 3 deletions(-)

diff --git a/neutron/api/v2/attributes.py b/neutron/api/v2/attributes.py
index 45ac2f1..e005ce0 100644
--- a/neutron/api/v2/attributes.py
+++ b/neutron/api/v2/attributes.py
@@ -13,14 +13,18 @@
 #    License for the specific language governing permissions and limitations
 #    under the License.
 
+import netaddr
+
 from neutron_lib.api import converters as lib_converters
 from neutron_lib.api.definitions import network as net_def
 from neutron_lib.api.definitions import port as port_def
 from neutron_lib.api.definitions import subnet as subnet_def
 from neutron_lib.api.definitions import subnetpool as subnetpool_def
+from neutron_lib.api import validators as lib_validators
 from neutron_lib import constants
 from neutron_lib.db import constants as db_const
 
+from neutron._i18n import _
 
 # Defining a constant to avoid repeating string literal in several modules
 SHARED = 'shared'
@@ -183,7 +187,7 @@ RESOURCE_ATTRIBUTE_MAP = {
                         'convert_to':
                             lib_converters.convert_none_to_empty_list,
                         'default': constants.ATTR_NOT_SPECIFIED,
-                        'validate': {'type:hostroutes': None},
+                        'validate': {'type:hostroutes2': None},
                         'is_visible': True},
         'tenant_id': {'allow_post': True, 'allow_put': False,
                       'validate': {
@@ -288,3 +292,35 @@ def get_collection_info(collection):
     :param collection: Collection or plural name of the resource
     """
     return RESOURCE_ATTRIBUTE_MAP.get(collection)
+
+
+def _validate_subnet2(data):
+    msg = None
+    try:
+        net = netaddr.IPNetwork(lib_validators.validate_no_whitespace(data))
+        if '/' not in data or (net.network != net.ip):
+            msg = _("'%(data)s' isn't a recognized IP subnet cidr,"
+                    " '%(cidr)s' is recommended") % {"data": data,
+                                                     "cidr": net.cidr}
+        else:
+            return
+    except Exception:
+        msg = _("'%s' is not a valid IP subnet") % data
+    return msg
+
+
+# TODO(alegacy): Supersede the neutron-lib version because it does not
+# properly validate subnets that have non-zero values in the host portion of
+# the address.  Move to neutron_lib when we eventually can no longer avoid
+# patching that package.
+def validate_hostroutes2(data, valid_values=None):
+    msg = lib_validators.validate_hostroutes(data, valid_values=valid_values)
+    if not msg:
+        for hostroute in data:
+            msg = _validate_subnet2(hostroute['destination'])
+            if msg:
+                break
+    return msg
+
+
+lib_validators.add_validator('type:hostroutes2', validate_hostroutes2)
diff --git a/neutron/extensions/extraroute.py b/neutron/extensions/extraroute.py
index 99ba1bd..5c8bc9f 100644
--- a/neutron/extensions/extraroute.py
+++ b/neutron/extensions/extraroute.py
@@ -40,7 +40,7 @@ class RoutesExhausted(nexception.BadRequest):
 EXTENDED_ATTRIBUTES_2_0 = {
     'routers': {
         'routes': {'allow_post': False, 'allow_put': True,
-                   'validate': {'type:hostroutes': None},
+                   'validate': {'type:hostroutes2': None},
                    'convert_to': converters.convert_none_to_empty_list,
                    'is_visible': True,
                    'default': constants.ATTR_NOT_SPECIFIED},
diff --git a/neutron/tests/unit/db/test_db_base_plugin_v2.py b/neutron/tests/unit/db/test_db_base_plugin_v2.py
index 732f69c..28900af 100644
--- a/neutron/tests/unit/db/test_db_base_plugin_v2.py
+++ b/neutron/tests/unit/db/test_db_base_plugin_v2.py
@@ -3681,7 +3681,9 @@ class TestSubnetsV2(NeutronDbPluginV2TestCase):
                                [{'nexthop': '10.0.2.20',
                                  'destination': '100.0.0.0/8'},
                                 {'nexthop': '10.0.2.20',
-                                 'destination': '100.0.0.0/8'}]]
+                                 'destination': '100.0.0.0/8'}],
+                               [{'destination': '100.1.1.1/8',
+                                 'nexthop': '10.0.2.20'}]]
             tenant_id = network['network']['tenant_id']
             for hostroutes in hostroute_pools:
                 data = {'subnet': {'network_id': network['network']['id'],
diff --git a/neutron/tests/unit/extensions/test_extraroute.py b/neutron/tests/unit/extensions/test_extraroute.py
index 33f580d..40ac1ed 100644
--- a/neutron/tests/unit/extensions/test_extraroute.py
+++ b/neutron/tests/unit/extensions/test_extraroute.py
@@ -378,6 +378,14 @@ class ExtraRouteDBTestCaseBase(object):
                                              routes}},
                                  expected_code=exc.HTTPBadRequest.code)
 
+                    routes = [{'destination': '1.1.1.1/24',
+                               'nexthop': '10.0.1.3'}]
+
+                    self._update('routers', r['router']['id'],
+                                 {'router': {'routes':
+                                             routes}},
+                                 expected_code=exc.HTTPBadRequest.code)
+
                     # clean-up
                     self._router_interface_action('remove',
                                                   r['router']['id'],
-- 
2.7.4

